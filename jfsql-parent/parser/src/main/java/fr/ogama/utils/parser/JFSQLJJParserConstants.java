/* Generated By:JavaCC: Do not edit this line. JFSQLJJParserConstants.java */
package fr.ogama.utils.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JFSQLJJParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_GET = 5;
  /** RegularExpression Id. */
  int K_DISTINCT = 6;
  /** RegularExpression Id. */
  int K_IN = 7;
  /** RegularExpression Id. */
  int K_DEEP = 8;
  /** RegularExpression Id. */
  int K_ = 9;
  /** RegularExpression Id. */
  int K_SORT = 10;
  /** RegularExpression Id. */
  int K_BY = 11;
  /** RegularExpression Id. */
  int K_OR = 12;
  /** RegularExpression Id. */
  int K_AND = 13;
  /** RegularExpression Id. */
  int K_NOT = 14;
  /** RegularExpression Id. */
  int K_LIKE = 15;
  /** RegularExpression Id. */
  int K_BETWEEN = 16;
  /** RegularExpression Id. */
  int K_MATCH = 17;
  /** RegularExpression Id. */
  int K_INFINITY = 18;
  /** RegularExpression Id. */
  int K_AVG = 19;
  /** RegularExpression Id. */
  int K_MIN = 20;
  /** RegularExpression Id. */
  int K_MAX = 21;
  /** RegularExpression Id. */
  int K_SUM = 22;
  /** RegularExpression Id. */
  int K_COUNT = 23;
  /** RegularExpression Id. */
  int K_PRIOR = 24;
  /** RegularExpression Id. */
  int K_ANY = 25;
  /** RegularExpression Id. */
  int K_NULL = 26;
  /** RegularExpression Id. */
  int K_ALL = 27;
  /** RegularExpression Id. */
  int K_EXISTS = 28;
  /** RegularExpression Id. */
  int K_SELECT = 29;
  /** RegularExpression Id. */
  int K_ASCENDING = 30;
  /** RegularExpression Id. */
  int K_DESCENDING = 31;
  /** RegularExpression Id. */
  int S_NUMBER = 32;
  /** RegularExpression Id. */
  int FLOAT = 33;
  /** RegularExpression Id. */
  int INTEGER = 34;
  /** RegularExpression Id. */
  int DIGIT = 35;
  /** RegularExpression Id. */
  int LINE_COMMENT = 36;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 37;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 38;
  /** RegularExpression Id. */
  int LETTER = 39;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 40;
  /** RegularExpression Id. */
  int S_BIND = 41;
  /** RegularExpression Id. */
  int S_CHAR_LITERAL = 42;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"GET\"",
    "\"DISTINCT\"",
    "\"IN\"",
    "\"DEEP\"",
    "\"HAVING\"",
    "\"SORT\"",
    "\"BY\"",
    "\"OR\"",
    "\"AND\"",
    "\"NOT\"",
    "\"LIKE\"",
    "\"BETWEEN\"",
    "\"MATCH\"",
    "\"INFINITY\"",
    "\"AVG\"",
    "\"MIN\"",
    "\"MAX\"",
    "\"SUM\"",
    "\"COUNT\"",
    "\"PRIOR\"",
    "\"ANY\"",
    "\"NULL\"",
    "\"ALL\"",
    "\"EXISTS\"",
    "\"SELECT\"",
    "\"ASCENDING\"",
    "\"DESCENDING\"",
    "<S_NUMBER>",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<S_IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<S_BIND>",
    "<S_CHAR_LITERAL>",
    "<S_QUOTED_IDENTIFIER>",
    "\";\"",
    "\"(\"",
    "\",\"",
    "\")\"",
    "\"?\"",
    "\"+\"",
    "\"-\"",
    "\"||\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\".\"",
    "\"=\"",
    "\"<>\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
  };

}
